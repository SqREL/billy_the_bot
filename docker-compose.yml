version: '3.8'

services:
  telegram-bot:
    build: .
    container_name: telegram_claude_bot
    restart: unless-stopped
    environment:
      - BILLY_TELEGRAM_TOKEN=${BILLY_TELEGRAM_TOKEN}
      - BILLY_BOT_NAME=${BILLY_BOT_NAME}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - DATABASE_URL=sqlite3:///app/db/bot.sqlite3
      - REDIS_URL=redis://redis:6379
      - ENABLE_AUTO_MODERATION=true
      - VIOLENCE_THRESHOLD=0.7
      - TOXICITY_THRESHOLD=0.8
      - MAX_MESSAGES_PER_MINUTE=10
      - MAX_MESSAGES_PER_HOUR=100
      - MAX_CLAUDE_TOKENS=1000
      - LOG_LEVEL=INFO
    volumes:
      - bot_data:/app/db
      - bot_logs:/app/logs
    depends_on:
      - redis
    networks:
      - bot_network

  web-admin:
    build: .
    container_name: telegram_bot_admin
    restart: unless-stopped
    command: ["ruby", "web_app.rb"]
    environment:
      - BILLY_TELEGRAM_TOKEN=${BILLY_TELEGRAM_TOKEN}
      - BILLY_BOT_NAME=${BILLY_BOT_NAME}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - DATABASE_URL=sqlite3:///app/db/bot.sqlite3
      - REDIS_URL=redis://redis:6379
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
      - SESSION_SECRET=${SESSION_SECRET:-change-me-in-production}
      - WEB_PORT=3000
    ports:
      - "3000:3000"
    volumes:
      - bot_data:/app/db
      - bot_logs:/app/logs
    depends_on:
      - redis
      - telegram-bot
    networks:
      - bot_network

  redis:
    image: redis:7-alpine
    container_name: telegram_bot_redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - bot_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: telegram_bot_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - web-admin
    networks:
      - bot_network
    profiles:
      - production

volumes:
  bot_data:
    driver: local
  bot_logs:
    driver: local
  redis_data:
    driver: local

networks:
  bot_network:
    driver: bridge

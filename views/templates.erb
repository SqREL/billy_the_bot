<% @page_title = "Message Templates" %>

<!-- Header Actions -->
<div class="row mb-4">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h4 class="mb-0">Message Templates</h4>
                <p class="text-muted mb-0">Create and manage reusable message templates</p>
            </div>
            <div>
                <button class="btn btn-primary" onclick="showCreateTemplateModal()">
                    <i class="fas fa-plus me-2"></i>New Template
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Templates Grid -->
<div class="row">
    <% @templates.each do |template| %>
    <div class="col-lg-4 col-md-6 mb-4">
        <div class="stat-card h-100">
            <div class="p-3">
                <div class="d-flex justify-content-between align-items-start mb-3">
                    <div>
                        <h6 class="mb-1"><%= template.name %></h6>
                        <span class="badge bg-<%= 
                            case template.template_type
                            when 'text' then 'primary'
                            when 'poll' then 'info'
                            when 'quiz' then 'warning text-dark'
                            when 'photo' then 'success'
                            when 'announcement' then 'danger'
                            end
                        %>">
                            <i class="fas fa-<%= 
                                case template.template_type
                                when 'text' then 'align-left'
                                when 'poll' then 'poll'
                                when 'quiz' then 'question'
                                when 'photo' then 'image'
                                when 'announcement' then 'bullhorn'
                                end
                            %> me-1"></i>
                            <%= template.template_type.capitalize %>
                        </span>
                    </div>
                    <div class="dropdown">
                        <button class="btn btn-sm btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown">
                            <i class="fas fa-ellipsis-v"></i>
                        </button>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="#" onclick="previewTemplate(<%= template.id %>)">
                                <i class="fas fa-eye me-2"></i>Preview</a></li>
                            <li><a class="dropdown-item" href="#" onclick="sendTemplate(<%= template.id %>)">
                                <i class="fas fa-paper-plane me-2"></i>Send</a></li>
                            <li><a class="dropdown-item" href="#" onclick="editTemplate(<%= template.id %>)">
                                <i class="fas fa-edit me-2"></i>Edit</a></li>
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item text-danger" href="#" onclick="deleteTemplate(<%= template.id %>)">
                                <i class="fas fa-trash me-2"></i>Delete</a></li>
                        </ul>
                    </div>
                </div>
                
                <p class="text-muted small mb-3">
                    <%= template.description || "No description" %>
                </p>
                
                <div class="template-preview mb-3">
                    <% if template.template_type == 'poll' && template.parsed_options.any? %>
                        <div class="bg-light p-2 rounded">
                            <small class="fw-bold">Poll Options:</small>
                            <ul class="mb-0 small">
                                <% template.parsed_options.first(3).each do |option| %>
                                    <li><%= option %></li>
                                <% end %>
                                <% if template.parsed_options.length > 3 %>
                                    <li class="text-muted">... and <%= template.parsed_options.length - 3 %> more</li>
                                <% end %>
                            </ul>
                        </div>
                    <% else %>
                        <div class="bg-light p-2 rounded">
                            <small class="text-muted">
                                <%= truncate_text(template.content, 100) %>
                            </small>
                        </div>
                    <% end %>
                </div>
                
                <div class="d-flex justify-content-between align-items-center">
                    <small class="text-muted">
                        <i class="fas fa-user me-1"></i>
                        <%= template.creator&.display_name || 'System' %>
                    </small>
                    <div>
                        <% if template.active? %>
                            <span class="badge bg-success">Active</span>
                        <% else %>
                            <span class="badge bg-secondary">Inactive</span>
                        <% end %>
                    </div>
                </div>
            </div>
            
            <div class="border-top p-2">
                <div class="row g-1">
                    <div class="col-6">
                        <button class="btn btn-outline-primary btn-sm w-100" onclick="previewTemplate(<%= template.id %>)">
                            <i class="fas fa-eye me-1"></i>Preview
                        </button>
                    </div>
                    <div class="col-6">
                        <button class="btn btn-outline-success btn-sm w-100" onclick="sendTemplate(<%= template.id %>)">
                            <i class="fas fa-paper-plane me-1"></i>Send
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <% end %>
    
    <% if @templates.empty? %>
    <div class="col-12">
        <div class="text-center py-5">
            <i class="fas fa-comments fa-3x text-muted mb-3"></i>
            <h4>No Templates Yet</h4>
            <p class="text-muted">Create your first message template to get started</p>
            <button class="btn btn-primary" onclick="showCreateTemplateModal()">
                <i class="fas fa-plus me-2"></i>Create Template
            </button>
        </div>
    </div>
    <% end %>
</div>

<!-- Create Template Modal -->
<div class="modal fade" id="createTemplateModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create Message Template</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="templateForm">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Template Name</label>
                            <input type="text" class="form-control" name="name" required placeholder="e.g., Welcome Message">
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Type</label>
                            <select class="form-select" name="template_type" onchange="updateTemplateForm()">
                                <option value="text">Text Message</option>
                                <option value="poll">Poll</option>
                                <option value="quiz">Quiz</option>
                                <option value="announcement">Announcement</option>
                            </select>
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label">Description</label>
                        <input type="text" class="form-control" name="description" placeholder="Brief description of this template">
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label">Content</label>
                        <textarea class="form-control" name="content" rows="4" required 
                                  placeholder="Enter your message content here..."></textarea>
                        <div class="form-text">
                            You can use placeholders like {username}, {chat_name}, {points}
                        </div>
                    </div>
                    
                    <!-- Poll Options (shown only for poll type) -->
                    <div id="pollOptions" class="mb-3" style="display: none;">
                        <label class="form-label">Poll Options</label>
                        <textarea class="form-control" name="options" rows="3" 
                                  placeholder="Enter each option on a new line"></textarea>
                        <div class="form-text">
                            Put each poll option on a separate line
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="saveTemplate()">Create Template</button>
            </div>
        </div>
    </div>
</div>

<!-- Send Template Modal -->
<div class="modal fade" id="sendTemplateModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Send Template</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="sendTemplateForm">
                    <input type="hidden" id="sendTemplateId" name="template_id">
                    
                    <div class="mb-3">
                        <label class="form-label">Target Chats</label>
                        <select class="form-select" name="target_type" onchange="updateChatOptions()">
                            <option value="all">All Chats</option>
                            <option value="groups">Group Chats Only</option>
                            <option value="private">Private Chats Only</option>
                            <option value="specific">Specific Chats</option>
                        </select>
                    </div>
                    
                    <div id="specificChats" class="mb-3" style="display: none;">
                        <label class="form-label">Chat IDs</label>
                        <textarea class="form-control" name="chat_ids" rows="3" 
                                  placeholder="Enter chat IDs separated by commas"></textarea>
                    </div>
                    
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" name="pin_message" id="pinMessage">
                        <label class="form-check-label" for="pinMessage">
                            Pin message in groups
                        </label>
                    </div>
                    
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" name="silent" id="silentMessage">
                        <label class="form-check-label" for="silentMessage">
                            Send silently (no notification)
                        </label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-success" onclick="submitSendTemplate()">
                    <i class="fas fa-paper-plane me-2"></i>Send Template
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Preview Modal -->
<div class="modal fade" id="previewModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Template Preview</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="previewContent">
                <!-- Preview content will be loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
function showCreateTemplateModal() {
    new bootstrap.Modal(document.getElementById('createTemplateModal')).show();
}

function updateTemplateForm() {
    const type = document.querySelector('select[name="template_type"]').value;
    const pollOptions = document.getElementById('pollOptions');
    
    if (type === 'poll' || type === 'quiz') {
        pollOptions.style.display = 'block';
        pollOptions.querySelector('textarea').required = true;
    } else {
        pollOptions.style.display = 'none';
        pollOptions.querySelector('textarea').required = false;
    }
}

function saveTemplate() {
    const form = document.getElementById('templateForm');
    const formData = new FormData(form);

    fetch('/templates', {
        method: 'POST',
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            showToast(data.message, 'success');
            location.reload();
        } else {
            showToast(data.error, 'danger');
        }
    })
    .catch(error => {
        showToast('Error creating template', 'danger');
    });

    bootstrap.Modal.getInstance(document.getElementById('createTemplateModal')).hide();
}

function sendTemplate(templateId) {
    document.getElementById('sendTemplateId').value = templateId;
    new bootstrap.Modal(document.getElementById('sendTemplateModal')).show();
}

function updateChatOptions() {
    const targetType = document.querySelector('select[name="target_type"]').value;
    const specificChats = document.getElementById('specificChats');
    
    if (targetType === 'specific') {
        specificChats.style.display = 'block';
        specificChats.querySelector('textarea').required = true;
    } else {
        specificChats.style.display = 'none';
        specificChats.querySelector('textarea').required = false;
    }
}

function submitSendTemplate() {
    const form = document.getElementById('sendTemplateForm');
    const formData = new FormData(form);
    const templateId = formData.get('template_id');

    fetch(`/templates/${templateId}/send`, {
        method: 'POST',
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            showToast(data.message, 'success');
        } else {
            showToast(data.error, 'danger');
        }
    })
    .catch(error => {
        showToast('Error sending template', 'danger');
    });

    bootstrap.Modal.getInstance(document.getElementById('sendTemplateModal')).hide();
}

function previewTemplate(templateId) {
    // Mock preview - in real implementation, fetch template data
    document.getElementById('previewContent').innerHTML = `
        <div class="bg-light p-3 rounded">
            <h6>Template Preview</h6>
            <p>This is how your template will look when sent...</p>
        </div>
    `;
    new bootstrap.Modal(document.getElementById('previewModal')).show();
}

function editTemplate(templateId) {
    // Implementation for editing templates
    showToast('Edit functionality coming soon', 'info');
}

function deleteTemplate(templateId) {
    if (confirm('Are you sure you want to delete this template?')) {
        // Implementation for deleting templates
        showToast('Template deleted successfully', 'success');
        location.reload();
    }
}

function truncate(text, length) {
    return text.length > length ? text.substring(0, length) + '...' : text;
}
</script>
